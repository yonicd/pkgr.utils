% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkgr_commands.R
\name{pkgr.add}
\alias{pkgr.add}
\alias{pkgr.remove}
\alias{pkgr.install}
\alias{pkgr.plan}
\title{pkgr commands}
\usage{
pkgr.add(pkgs, ..., flags = NULL)

pkgr.remove(pkgs, ..., flags = NULL)

pkgr.install(..., flags = NULL)

pkgr.plan(..., flags = NULL)
}
\arguments{
\item{pkgs}{character, names of packages passed in add/remove}

\item{\dots}{options that are passed into the command calls}

\item{flags}{character, names of flags that are passed into the command calls}
}
\value{
character
}
\description{
Commands that can be called in pkgr command line
}
\details{
add package/s to the configuration file and optionally install

pkgr add [package name1] [package name2] ... [options] [flags]

command specific flag

\tabular{llll}{
\strong{Flag} \tab \strong{Description} \tab \strong{Default}\cr
install   \tab install package/s after adding \tab
}

remove package/s from the configuration file

pkgr remove [package name1] [package name2] ... [options] [flags]

install a package

pkgr install [options] [flags]

see the plan for an install

pkgr plan [options] [flags]

global options:

\tabular{llll}{
\strong{Option} \tab \strong{Class} \tab \strong{Description} \tab \strong{Default}\cr
config   \tab character \tab config file path                       \tab pkgr.yml\cr
loglevel \tab character \tab evel for logging                       \tab         \cr
thread   \tab integer   \tab number of threads to execute with      \tab
}


global flags:

\tabular{llll}{
\strong{Flag} \tab \strong{Description} \tab \strong{Default}\cr
debug       \tab use debug mode                         \tab         \cr
preview     \tab preview action, but do not run command \tab         \cr
update      \tab update packages along with install     \tab
}
}
\examples{

pkgr.add(c('dplyr','ggplot2'))

pkgr.add(c('dplyr','ggplot2'),config='pkgr.yml')

pkgr.remove(c('dplyr','ggplot2'))

pkgr.install()

pkgr.install(config='pkgr.yml',library=.libPaths()[1])

pkgr.plan(config='pkgr.yml',library=.libPaths()[1])

}
